@using ODK.Umbraco.Members;
@using ODK.Umbraco.Payments;
@using ODK.Umbraco.Web.Mvc;
@inherits OdkUmbracoTemplatePage
@{
    Layout = "Master.cshtml";

    MemberModel member = CurrentMemberModel;
    HtmlHelper<MemberModel> memberHelper = Html.For<MemberModel>(member);

    IPublishedContent[] subscriptions = Model.Content.Children.ToArray();

    DateTime? subscriptionEndDate = member.SubscriptionEndDate;
}

<div class="content">
    <div class="container">
        @if (member.Type != MemberTypes.None)
        {
            string membershipType = member.Type.ToString();

            <div class="container">
                <div class="row">
                    <div class="col-xs-12">
                        <div class="form-group">
                            @memberHelper.LabelFor(x => x.Type, new { @class = "form-control-label" })
                            <span class="form-control-plaintext">@membershipType</span>
                        </div>
                    </div>
                </div>

                @if (subscriptionEndDate != null)
                {
                    <div class="row">
                        <div class="form-group">
                            @memberHelper.LabelFor(x => x.SubscriptionEndDate, new { @class = "form-control-label" })
                            <span class="form-control-plaintext">@subscriptionEndDate.Value.ToString("dd MMMM yyyy")</span>
                        </div>
                    </div>
                }
            </div>
        }
        @if (subscriptionEndDate == null || (subscriptionEndDate.Value - DateTime.Today).TotalDays <= 30)
        {
            <h2>@(CurrentMemberModel.Type != MemberTypes.Trial ? "Renew" : "Buy")</h2>
            if (CurrentMemberModel.Type == MemberTypes.Trial)
            {
                <p>
                    You are currently on a trial membership. Purchase a membership below to join us.
                </p>
            }


            <div id="subscriptionTypes">
                @for (int i = 0; i < subscriptions.Length; i++)
                {
                    @SubscriptionAccordionItem(subscriptions[i], i == 0, member)
                }
            </div>
        }
    </div>
</div>

@helper SubscriptionAccordionItem(IPublishedContent subscription, bool expanded, MemberModel member)
{
    PaymentModel payment = new PaymentModel(subscription, HomePage, member);
    int id = payment.Id;

    <div class="card">
        <div class="card-header" id="heading-@id">
            <h5 class="mb-0">
                <button class="btn btn-link" data-toggle="collapse" data-target="#collapse-@id" aria-expanded="true" aria-controls="collapse-@id">@payment.Title</button>
            </h5>
        </div>

        <div id="collapse-@id" class="collapse @Html.Raw(expanded ? "show" : null)" aria-labelledby="heading-@id" data-parent="#subscriptionTypes">
            <div class="card-body">
                @Html.Raw(payment.Description)
                @Html.Partial("PaymentButton", payment)
            </div>
        </div>
    </div>
}

@section Scripts
{
    <script src="https://checkout.stripe.com/checkout.js"></script>
    @Scripts.Render("~/bundles/js/account")
}