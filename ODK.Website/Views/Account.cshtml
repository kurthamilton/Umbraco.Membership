@using ODK.Umbraco.Members;
@using ODK.Umbraco.Payments;
@using ODK.Umbraco.Web.Mvc;
@inherits OdkUmbracoTemplatePage
@{
    Layout = "Master.cshtml";

    MemberModel member = CurrentMemberModel;
    HtmlHelper<MemberModel> memberHelper = Html.For<MemberModel>(member);

    IPublishedContent[] subscriptions = Model.Content.Children.ToArray();

    MemberPayment lastPayment = PaymentService.GetLastPayment(CurrentMember.Id);
}

@if (Request.QueryString["payment"] == "cancelled")
{
    <div class="container">
        <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
            Payment cancelled
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    </div>
}

@if (Request.QueryString["payment"] == "complete")
{
    <div class="container">
        <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
            Payment complete
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    </div>
}

<div class="content">
    <div class="container">
        <div class="row">
            @if (member.Type != MemberTypes.None)
            {
                <div class="col-6">
                    <div class="form-group">
                        @memberHelper.LabelFor(x => x.Type, "Current membership type", new { @class = "form-control-label" })
                        <span class="form-control-plaintext">@member.Type</span>
                    </div>
                </div>
            }
            @if (lastPayment != null)
            {
                @*
                    <div class="col-6">
                        <div class="form-group">
                            <label class="form-control-label">Last payment</label>
                            <span class="form-control-plaintext">@GetAmount(lastPayment.CurrencyCode, lastPayment.Amount) on @lastPayment.Date.ToString("dd MMMM yyyy")</span>
                        </div>
                    </div>
                *@
            }
        </div>

        <h1>@(CurrentMemberModel.Type != MemberTypes.Trial ? "Renew" : "Buy")</h1>
        <div id="subscriptionTypes">
            @for (int i = 0; i < subscriptions.Length; i++)
            {
                @SubscriptionAccordionItem(subscriptions[i], i == 0, member)
            }
        </div>
    </div>
</div>

@helper SubscriptionAccordionItem(IPublishedContent subscription, bool expanded, MemberModel member)
{
    PaymentModel payment = new PaymentModel(subscription, HomePage, member);
    int id = payment.Id;

    <div class="card">
        <div class="card-header" id="heading-@id">
            <h5 class="mb-0">
                <button class="btn btn-link" data-toggle="collapse" data-target="#collapse-@id" aria-expanded="true" aria-controls="collapse-@id">@payment.Title</button>
            </h5>
        </div>

        <div id="collapse-@id" class="collapse @Html.Raw(expanded ? "show" : null)" aria-labelledby="heading-@id" data-parent="#subscriptionTypes">
            <div class="card-body">
                @Html.Raw(payment.Description)

                @Html.Partial("PaymentButton", payment)
            </div>
        </div>
    </div>
}

@section Header
{
    @Styles.Render("~/bundles/css/account")
}

@section Scripts
{
    <script src="https://checkout.stripe.com/checkout.js"></script>
    @Scripts.Render("~/bundles/js/account")
}