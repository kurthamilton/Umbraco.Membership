@using ODK.Umbraco.Content;
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "Master.cshtml";
    IPublishedContent[] contentItems = Model.Content.Children.Where(x => !x.IsPage()).ToArray();
    int accordionId = 0;
    int accordionItemId = 0;
    bool inAccordion = false;
}

<div class="container">
    @Html.Partial("Content")
</div>

<div class="content">
    <div class="container">
        @foreach (IPublishedContent contentItem in contentItems)
        {
            string title = contentItem.GetPropertyValue<string>("accordionTitle");
            bool isAccordionItem = !string.IsNullOrEmpty(title);

            if (isAccordionItem && !inAccordion)
            {
                @Html.Raw("<div id=\"accordion-" + accordionId + "\">")

                accordionItemId = 0;
                inAccordion = true;
            }
            else if (!isAccordionItem && inAccordion)
            {
                @Html.Raw("</div>")

                accordionId++;
                inAccordion = false;
            }

            if (inAccordion)
            {
                @RenderAccordionItem(accordionId, accordionItemId++, contentItem, title, false)
            }
            else
            {
                @RenderContentItem(contentItem)
            }
        }
    </div>
</div>

@helper RenderAccordionItem(int id, int itemId, IPublishedContent contentItem, string title, bool expanded)
{
    string content = contentItem.GetPropertyValue<string>("accordionContent");
    <div class="card">
        <div class="card-header" id="heading-@itemId">
            <a href="#" class="mb-0" data-toggle="collapse" data-target="#collapse-@itemId" aria-expanded="true" aria-controls="collapse-@itemId">@title</a>
        </div>

        <div id="collapse-@itemId" class="collapse @Html.Raw(expanded ? "show" : null)" aria-labelledby="heading-@itemId" data-parent="#accordion-@id">
            <div class="card-body">
                @Html.Raw(@content)
            </div>
        </div>
    </div>
}

@helper RenderContentItem(IPublishedContent contentItem)
{
    <div class="content">
        @Html.GetGridHtml(contentItem, "html", "bootstrap3-fluid")
    </div>
}