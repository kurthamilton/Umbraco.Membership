@using ODK.Umbraco.Content;
@using ODK.Umbraco.Members;
@using ODK.Umbraco.Web.Mvc;
@using ODK.Website.Controllers;
@inherits ODK.Umbraco.Web.Mvc.OdkUmbracoTemplatePage
@{
    Layout = "Master.cshtml";

    string loginButtonText = HomePage.GetHomePageValue<string>("loginButtonText");

    LoginModel model = GetInvalidModel<LoginModel>();
    bool isError = model != null;

    HtmlHelper<LoginModel> loginHelper = Html.For<LoginModel>(model != null ? model : new LoginModel());
}

<section class="section section--main">
    <div class="container">
        @using (Html.BeginUmbracoForm<AccountController>("Login", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                @loginHelper.LabelFor(x => x.Email)
                @loginHelper.TextBoxFor(x => x.Email, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @loginHelper.LabelFor(x => x.Password)
                @loginHelper.TextBoxFor(x => x.Password, new { @class = "form-control", type = "password" })
            </div>

            if (isError)
            {
                <div class="text-danger w-100">
                    The @loginHelper.DisplayNameFor(x => x.Email) or @loginHelper.DisplayNameFor(x => x.Password) is incorrect
                </div>
            }

            <button type="submit" class="btn btn-primary">@loginButtonText</button>
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        }
    </div>
</section>