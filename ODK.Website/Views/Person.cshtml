@using ODK.Umbraco.Members;
@using ODK.Umbraco.Web.Mvc;
@inherits ODK.Umbraco.Web.Mvc.OdkUmbracoTemplatePage
@{
    Layout = "Master.cshtml";

    int id = 0;
    int.TryParse(Request.QueryString["id"], out id);

    MemberModel member = MemberService.GetMember(id);
    if (member == null)
    {
        Response.Redirect(Model.Content.Parent.Url);
        return;
    }

    HtmlHelper<MemberModel> memberHelper = Html.For<MemberModel>(member);
}

@section PageHeader
{
    <section class="section section--header">
        <div class="container">
            <h1>
                @member.FullName
            </h1>
        </div>
    </section>
}

<section class="section">
    <div class="container">
        <div class="row">
            <div class="col-md-9">
                @RenderField(memberHelper.DisplayNameFor(x => x.Neighbourhood), member.Neighbourhood)
                @RenderField(memberHelper.DisplayNameFor(x => x.Hometown), member.Hometown)
                @RenderField(memberHelper.DisplayNameFor(x => x.FavouriteBeverage), member.FavouriteBeverage)
                @RenderField(memberHelper.DisplayNameFor(x => x.KnittingExperience), member.KnittingExperienceOther ?? member.KnittingExperience)
                @RenderField(memberHelper.DisplayNameFor(x => x.Reason), member.Reason)
                @RenderHtmlField(memberHelper.DisplayNameFor(x => x.FacebookProfile), !string.IsNullOrEmpty(member.FacebookProfile) ? RenderLink("https://www.facebook.com/" + member.FacebookProfile) : null)

                @if (member.Joined != null)
                {
                    @RenderField(memberHelper.DisplayNameFor(x => x.Joined), member.Joined.Value.ToString("dd MMMM yyyy"))
                }
            </div>

            <div class="col-md-3">
                @if (member.Picture != null)
                {
                    <img src="@member.Picture.GetCropUrl(height: 300)" class="picture--profile" />
                }
                else
                {
                    <i class="fas fa-user fa-5x"></i>
                }
            </div>
        </div>
        <div class="row">
            <div class="col-md-9">
                <a href="@Model.Content.Parent.Url#member-@member.Id">Other Knitwits</a>
            </div>
        </div>
    </div>
</section>

@helper RenderField(MvcHtmlString field, string value)
{
    if (string.IsNullOrEmpty(value))
    {
        return;
    }

    @RenderHtmlField(field, Html.Raw(value))
}

@helper RenderHtmlField(MvcHtmlString field, IHtmlString value)
{
    if (value == null)
    {
        return;
    }

    <div class="form-group">
        <label class="col-form-label">@field</label>
        <div>
            <span class="form-control-plaintext">@value</span>
        </div>
    </div>
}

@helper RenderLink(string url)
{
    <a href="@url" target="_blank">@url</a>
}