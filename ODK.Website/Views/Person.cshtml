@using ODK.Umbraco.Members;
@using ODK.Umbraco.Mvc;
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "Master.cshtml";

    int id = 0;
    int.TryParse(Request.QueryString["id"], out id);

    MemberService memberService = new MemberService(ApplicationContext.Services.MemberService, Umbraco);
    MemberModel member = memberService.GetMember(id);

    HtmlHelper<MemberModel> memberHelper = Html.For<MemberModel>(member);

    if (member == null)
    {
        Response.Redirect(Model.Content.Parent.Url);
        return;
    }

    var dataTypeService = ApplicationContext.Services.DataTypeService;
}

<section class="section section--header">
    <div class="container">
        <h1>
            @member.FirstName  @member.LastName
        </h1>
    </div>
</section>

<section class="section">
    <div class="container">
        <div class="row">
            @if (member.Picture != null)
            {
                <div class="col-md-3">
                    <img src="@member.Picture.GetCropUrl(height: 300)" class="picture--profile" />
                </div>
            }

            <div class="col-md-9">
                <div class="container">
                    @RenderField(memberHelper.DisplayNameFor(x => x.Neighbourhood), member.Neighbourhood)
                    @RenderField(memberHelper.DisplayNameFor(x => x.Hometown), member.Hometown)
                    @RenderField(memberHelper.DisplayNameFor(x => x.FavouriteBeverage), member.FavouriteBeverage)
                    @RenderField(memberHelper.DisplayNameFor(x => x.KnittingExperienceId), member.KnittingExperienceOther ?? dataTypeService.GetPreValueAsString(member.KnittingExperienceId))
                    @RenderField(memberHelper.DisplayNameFor(x => x.Reason), member.Reason)
                    @RenderField(memberHelper.DisplayNameFor(x => x.FacebookProfile), member.FacebookProfile)

                    @if (member.Joined != null)
                    {
                         @RenderField(memberHelper.DisplayNameFor(x => x.Joined), member.Joined.Value.ToString("dd MMMM yyyy"))
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@helper RenderField(MvcHtmlString field, string value)
{
    if (string.IsNullOrEmpty(value))
    {
        return;
    }

    <div class="row">
        <label class="col-4 col-form-label text-right">@field</label>
        <div class="col-8">
            <span class="form-control-plaintext">@value</span>
        </div>
    </div>
}